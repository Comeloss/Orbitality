//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public TriggerFireComponent triggerFire { get { return (TriggerFireComponent)GetComponent(InputComponentsLookup.TriggerFire); } }
    public bool hasTriggerFire { get { return HasComponent(InputComponentsLookup.TriggerFire); } }

    public void AddTriggerFire(int newPlanetId) {
        var index = InputComponentsLookup.TriggerFire;
        var component = CreateComponent<TriggerFireComponent>(index);
        component.PlanetId = newPlanetId;
        AddComponent(index, component);
    }

    public void ReplaceTriggerFire(int newPlanetId) {
        var index = InputComponentsLookup.TriggerFire;
        var component = CreateComponent<TriggerFireComponent>(index);
        component.PlanetId = newPlanetId;
        ReplaceComponent(index, component);
    }

    public void RemoveTriggerFire() {
        RemoveComponent(InputComponentsLookup.TriggerFire);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherTriggerFire;

    public static Entitas.IMatcher<InputEntity> TriggerFire {
        get {
            if (_matcherTriggerFire == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.TriggerFire);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherTriggerFire = matcher;
            }

            return _matcherTriggerFire;
        }
    }
}
