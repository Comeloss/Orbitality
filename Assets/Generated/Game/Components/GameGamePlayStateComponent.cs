//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gamePlayStateEntity { get { return GetGroup(GameMatcher.GamePlayState).GetSingleEntity(); } }
    public GamePlayStateComponent gamePlayState { get { return gamePlayStateEntity.gamePlayState; } }
    public bool hasGamePlayState { get { return gamePlayStateEntity != null; } }

    public GameEntity SetGamePlayState(GamePlayStateComponent.GamePlayStateType newCurrentState) {
        if (hasGamePlayState) {
            throw new Entitas.EntitasException("Could not set GamePlayState!\n" + this + " already has an entity with GamePlayStateComponent!",
                "You should check if the context already has a gamePlayStateEntity before setting it or use context.ReplaceGamePlayState().");
        }
        var entity = CreateEntity();
        entity.AddGamePlayState(newCurrentState);
        return entity;
    }

    public void ReplaceGamePlayState(GamePlayStateComponent.GamePlayStateType newCurrentState) {
        var entity = gamePlayStateEntity;
        if (entity == null) {
            entity = SetGamePlayState(newCurrentState);
        } else {
            entity.ReplaceGamePlayState(newCurrentState);
        }
    }

    public void RemoveGamePlayState() {
        gamePlayStateEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GamePlayStateComponent gamePlayState { get { return (GamePlayStateComponent)GetComponent(GameComponentsLookup.GamePlayState); } }
    public bool hasGamePlayState { get { return HasComponent(GameComponentsLookup.GamePlayState); } }

    public void AddGamePlayState(GamePlayStateComponent.GamePlayStateType newCurrentState) {
        var index = GameComponentsLookup.GamePlayState;
        var component = CreateComponent<GamePlayStateComponent>(index);
        component.CurrentState = newCurrentState;
        AddComponent(index, component);
    }

    public void ReplaceGamePlayState(GamePlayStateComponent.GamePlayStateType newCurrentState) {
        var index = GameComponentsLookup.GamePlayState;
        var component = CreateComponent<GamePlayStateComponent>(index);
        component.CurrentState = newCurrentState;
        ReplaceComponent(index, component);
    }

    public void RemoveGamePlayState() {
        RemoveComponent(GameComponentsLookup.GamePlayState);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGamePlayState;

    public static Entitas.IMatcher<GameEntity> GamePlayState {
        get {
            if (_matcherGamePlayState == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GamePlayState);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGamePlayState = matcher;
            }

            return _matcherGamePlayState;
        }
    }
}
