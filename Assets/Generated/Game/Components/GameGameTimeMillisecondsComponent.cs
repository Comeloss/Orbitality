//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameTimeMillisecondsEntity { get { return GetGroup(GameMatcher.GameTimeMilliseconds).GetSingleEntity(); } }
    public GameTimeMillisecondsComponent gameTimeMilliseconds { get { return gameTimeMillisecondsEntity.gameTimeMilliseconds; } }
    public bool hasGameTimeMilliseconds { get { return gameTimeMillisecondsEntity != null; } }

    public GameEntity SetGameTimeMilliseconds(float newTime) {
        if (hasGameTimeMilliseconds) {
            throw new Entitas.EntitasException("Could not set GameTimeMilliseconds!\n" + this + " already has an entity with GameTimeMillisecondsComponent!",
                "You should check if the context already has a gameTimeMillisecondsEntity before setting it or use context.ReplaceGameTimeMilliseconds().");
        }
        var entity = CreateEntity();
        entity.AddGameTimeMilliseconds(newTime);
        return entity;
    }

    public void ReplaceGameTimeMilliseconds(float newTime) {
        var entity = gameTimeMillisecondsEntity;
        if (entity == null) {
            entity = SetGameTimeMilliseconds(newTime);
        } else {
            entity.ReplaceGameTimeMilliseconds(newTime);
        }
    }

    public void RemoveGameTimeMilliseconds() {
        gameTimeMillisecondsEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameTimeMillisecondsComponent gameTimeMilliseconds { get { return (GameTimeMillisecondsComponent)GetComponent(GameComponentsLookup.GameTimeMilliseconds); } }
    public bool hasGameTimeMilliseconds { get { return HasComponent(GameComponentsLookup.GameTimeMilliseconds); } }

    public void AddGameTimeMilliseconds(float newTime) {
        var index = GameComponentsLookup.GameTimeMilliseconds;
        var component = CreateComponent<GameTimeMillisecondsComponent>(index);
        component.Time = newTime;
        AddComponent(index, component);
    }

    public void ReplaceGameTimeMilliseconds(float newTime) {
        var index = GameComponentsLookup.GameTimeMilliseconds;
        var component = CreateComponent<GameTimeMillisecondsComponent>(index);
        component.Time = newTime;
        ReplaceComponent(index, component);
    }

    public void RemoveGameTimeMilliseconds() {
        RemoveComponent(GameComponentsLookup.GameTimeMilliseconds);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameTimeMilliseconds;

    public static Entitas.IMatcher<GameEntity> GameTimeMilliseconds {
        get {
            if (_matcherGameTimeMilliseconds == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameTimeMilliseconds);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameTimeMilliseconds = matcher;
            }

            return _matcherGameTimeMilliseconds;
        }
    }
}
