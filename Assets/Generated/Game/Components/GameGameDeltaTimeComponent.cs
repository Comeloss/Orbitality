//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity gameDeltaTimeEntity { get { return GetGroup(GameMatcher.GameDeltaTime).GetSingleEntity(); } }
    public GameDeltaTimeComponent gameDeltaTime { get { return gameDeltaTimeEntity.gameDeltaTime; } }
    public bool hasGameDeltaTime { get { return gameDeltaTimeEntity != null; } }

    public GameEntity SetGameDeltaTime(float newTimeDelta, float newTimeSinceStartup) {
        if (hasGameDeltaTime) {
            throw new Entitas.EntitasException("Could not set GameDeltaTime!\n" + this + " already has an entity with GameDeltaTimeComponent!",
                "You should check if the context already has a gameDeltaTimeEntity before setting it or use context.ReplaceGameDeltaTime().");
        }
        var entity = CreateEntity();
        entity.AddGameDeltaTime(newTimeDelta, newTimeSinceStartup);
        return entity;
    }

    public void ReplaceGameDeltaTime(float newTimeDelta, float newTimeSinceStartup) {
        var entity = gameDeltaTimeEntity;
        if (entity == null) {
            entity = SetGameDeltaTime(newTimeDelta, newTimeSinceStartup);
        } else {
            entity.ReplaceGameDeltaTime(newTimeDelta, newTimeSinceStartup);
        }
    }

    public void RemoveGameDeltaTime() {
        gameDeltaTimeEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GameDeltaTimeComponent gameDeltaTime { get { return (GameDeltaTimeComponent)GetComponent(GameComponentsLookup.GameDeltaTime); } }
    public bool hasGameDeltaTime { get { return HasComponent(GameComponentsLookup.GameDeltaTime); } }

    public void AddGameDeltaTime(float newTimeDelta, float newTimeSinceStartup) {
        var index = GameComponentsLookup.GameDeltaTime;
        var component = CreateComponent<GameDeltaTimeComponent>(index);
        component.TimeDelta = newTimeDelta;
        component.TimeSinceStartup = newTimeSinceStartup;
        AddComponent(index, component);
    }

    public void ReplaceGameDeltaTime(float newTimeDelta, float newTimeSinceStartup) {
        var index = GameComponentsLookup.GameDeltaTime;
        var component = CreateComponent<GameDeltaTimeComponent>(index);
        component.TimeDelta = newTimeDelta;
        component.TimeSinceStartup = newTimeSinceStartup;
        ReplaceComponent(index, component);
    }

    public void RemoveGameDeltaTime() {
        RemoveComponent(GameComponentsLookup.GameDeltaTime);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGameDeltaTime;

    public static Entitas.IMatcher<GameEntity> GameDeltaTime {
        get {
            if (_matcherGameDeltaTime == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.GameDeltaTime);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGameDeltaTime = matcher;
            }

            return _matcherGameDeltaTime;
        }
    }
}
