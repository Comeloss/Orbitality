//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public PlanetInfoComponent planetInfo { get { return (PlanetInfoComponent)GetComponent(GameComponentsLookup.PlanetInfo); } }
    public bool hasPlanetInfo { get { return HasComponent(GameComponentsLookup.PlanetInfo); } }

    public void AddPlanetInfo(string newName, int newId, string newSpriteName, float newSize) {
        var index = GameComponentsLookup.PlanetInfo;
        var component = CreateComponent<PlanetInfoComponent>(index);
        component.Name = newName;
        component.Id = newId;
        component.SpriteName = newSpriteName;
        component.Size = newSize;
        AddComponent(index, component);
    }

    public void ReplacePlanetInfo(string newName, int newId, string newSpriteName, float newSize) {
        var index = GameComponentsLookup.PlanetInfo;
        var component = CreateComponent<PlanetInfoComponent>(index);
        component.Name = newName;
        component.Id = newId;
        component.SpriteName = newSpriteName;
        component.Size = newSize;
        ReplaceComponent(index, component);
    }

    public void RemovePlanetInfo() {
        RemoveComponent(GameComponentsLookup.PlanetInfo);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherPlanetInfo;

    public static Entitas.IMatcher<GameEntity> PlanetInfo {
        get {
            if (_matcherPlanetInfo == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.PlanetInfo);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherPlanetInfo = matcher;
            }

            return _matcherPlanetInfo;
        }
    }
}
